{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/india/india.component.ts","webpack:///src/app/india/india.component.html","webpack:///src/app/statewise/statewise.component.ts","webpack:///src/app/statewise/statewise.component.html","webpack:///src/app/tamilnadu/tamilnadu.component.ts","webpack:///src/app/tamilnadu/tamilnadu.component.html","webpack:///src/app/world/world.component.ts","webpack:///src/app/world/world.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","http","title","restItemsUrl","getRestItems","restItemsServiceGetRestItems","subscribe","restItems","console","log","get","pipe","data","selector","templateUrl","styleUrls","path","component","AppModule","declarations","providers","bootstrap","IndiaComponent","displayedColumns","statewise","test","totalCases","splice","dataSource","StatewiseComponent","restDistUrl","foods","value","viewValue","model","getRestItems1","dataSelect","stateName","districtWiseData","pbj","statecode","obj","districtData","restItemsServiceGetRestItems1","changeClient","TamilnaduComponent","WorldComponent","ELEMENT_DATA","position","name","weight","symbol","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Covid19';\n  restItems: any;\n  restItemsUrl = 'https://api.covid19india.org/data.json';\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getRestItems();\n  }\n\n  // Read all REST Items\n  getRestItems(): void {\n    this.restItemsServiceGetRestItems()\n      .subscribe(\n        restItems => {\n          this.restItems = restItems;\n          console.log(this.restItems);\n        }\n      )\n  }\n\n  // Rest Items Service: Read all REST Items\n  restItemsServiceGetRestItems() {\n    return this.http\n      .get(this.restItemsUrl)\n      .pipe(map(data => data));\n  }\n\n}\n","<mat-toolbar>\n  <button mat-button (click)=\"sidenav.toggle()\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">menu</mat-icon></button>\n  <span class=\"toolbartext\">COVID19 LIVE UPDATES</span>\n</mat-toolbar>\n<mat-sidenav-container>\n  <mat-sidenav  #sidenav mode=\"side\" opened> \n    <mat-nav-list class=\"navlist\">\n      <a mat-list-item routerLink=\"world\" style=\"display: none;\">World</a>\n      <a mat-list-item routerLink=\"india\">India</a>\n      <a mat-list-item routerLink=\"stateWise\">StateWise</a>\n      <a mat-list-item routerLink=\"tn\" style=\"display: none;\">Tamil Nadu</a>\n    </mat-nav-list>     \n  </mat-sidenav>\n  <mat-sidenav-content>\n    <P style=\"height: 86vh;\"><router-outlet></router-outlet></P>\n  </mat-sidenav-content>  \n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';import {MatListModule} from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';import {MatButtonModule} from '@angular/material/button';\nimport { WorldComponent } from './world/world.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IndiaComponent } from './india/india.component';\nimport { TamilnaduComponent } from './tamilnadu/tamilnadu.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StatewiseComponent } from './statewise/statewise.component';\nimport {MatSelectModule} from '@angular/material/select';\n\nconst routes: Routes = [\n  {path:'world', component:WorldComponent},\n  {path:'india', component:IndiaComponent},\n  {path:'tn', component:TamilnaduComponent},\n  {path:'stateWise', component:StatewiseComponent},\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorldComponent,\n    IndiaComponent,\n    TamilnaduComponent,\n    StatewiseComponent\n  ],\n  imports: [\n    BrowserModule,MatCardModule,MatTableModule,\n    AppRoutingModule,RouterModule.forRoot(routes),\n    BrowserAnimationsModule,MatListModule,MatPaginatorModule,\n    MatSidenavModule,MatButtonModule,MatSelectModule,\n    MatToolbarModule,MatIconModule,HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-india',\n  templateUrl: './india.component.html',\n  styleUrls: ['./india.component.css']\n})\nexport class IndiaComponent implements OnInit {\n\n  restItems: any;\n  totalCases: any;\n  dataSource: any;\n  restItemsUrl = 'https://api.covid19india.org/data.json';\n  displayedColumns: string[] = ['State', 'Confirmed', 'Active', 'Recovered','Deceased'];  \n  // @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getRestItems();\n  }\n\n  // Read all REST Items\n  getRestItems(): void {\n    this.restItemsServiceGetRestItems()\n      .subscribe(\n        restItems => {\n          this.restItems = restItems;\n          var statewise = this.restItems.statewise;\n          var test = this.restItems.statewise;\n          this.totalCases = statewise[0];\n          test.splice(0, 1);\n          debugger;\n          this.dataSource = new MatTableDataSource<PeriodicElement>(test);\n          console.log(this.restItems);\n          console.log(statewise);\n          console.log(statewise[0])\n        }\n      )\n  }\n\n  // Rest Items Service: Read all REST Items\n  restItemsServiceGetRestItems() {\n    return this.http\n      .get(this.restItemsUrl)\n      .pipe(map(data => data));\n  }\n}\nexport interface PeriodicElement {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\n","<h1>India Covid19 Cases Update</h1>\n<div *ngIf=\"totalCases\">\n  <p>Last Updated: {{ totalCases.lastupdatedtime }}</p>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Confirmed</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.confirmed }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Active</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.active }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Recovered</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.recovered }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Deceased</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.deaths }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n</div>\n<div class=\"grid\">\n  <div class=\"mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n    \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"State\">\n          <th mat-header-cell *matHeaderCellDef> State </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.state}} </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"Confirmed\">\n          <th mat-header-cell *matHeaderCellDef> Confirmed </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.confirmed}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"Active\">\n          <th mat-header-cell *matHeaderCellDef> Active </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n        </ng-container>\n    \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"Recovered\">\n          <th mat-header-cell *matHeaderCellDef> Recovered </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.recovered}} </td>\n        </ng-container>\n    \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"Deceased\">\n          <th mat-header-cell *matHeaderCellDef> Deceased </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.deaths}} </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    \n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </div>\n</div>\n\n  \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-statewise',\n  templateUrl: './statewise.component.html',\n  styleUrls: ['./statewise.component.css']\n})\nexport class StatewiseComponent implements OnInit {\n\n  restItems: any;\n  totalCases: any;\n  dataSource: any;\n  stateDetails: any;\n  dataSelect: PeriodicElement1[];\n  districtWiseData: any;\n  restItemsUrl = 'https://api.covid19india.org/data.json';\n  restDistUrl = 'https://api.covid19india.org/v2/state_district_wise.json';\n  displayedColumns: string[] = ['State', 'Confirmed', 'Active', 'Recovered','Deceased'];  \n  // @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getRestItems();\n    this.getRestItems1();\n  }\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak', model: 'abc'},\n    {value: 'pizza-1', viewValue: 'Pizza', model: 'abc'},\n    {value: 'tacos-2', viewValue: 'Tacos', model: 'abc'}\n  ];\n  // Read all REST Items\n  getRestItems(): void {\n    this.restItemsServiceGetRestItems()\n      .subscribe(\n        restItems => {\n          this.restItems = restItems;\n          var statewise = this.restItems.statewise;\n          this.totalCases = statewise[0];\n          statewise.splice(0, 1);\n          this.dataSource = new MatTableDataSource<PeriodicElement>(statewise);\n          this.dataSelect = statewise;\n          \n        }\n      )\n  }\n\n  changeClient(data){\n    var stateName = this.districtWiseData;\n    for(var pbj of this.restItems.statewise){\n      if(pbj.statecode == data){\n        debugger;\n        this.totalCases = pbj;\n      }\n    }\n    for(var obj of this.districtWiseData){\n      if(obj.statecode == data){\n        this.dataSource = new MatTableDataSource<PeriodicElement>(obj.districtData);\n      }\n    }\n    console.log(this.districtWiseData);\n    debugger;\n  }\n    // Rest Items Service: Read all REST Items\n  restItemsServiceGetRestItems() {\n    return this.http\n      .get(this.restItemsUrl)\n      .pipe(map(data => data));\n  }\n\n  getRestItems1(): void {\n    this.restItemsServiceGetRestItems1()\n      .subscribe(\n        restItems => {\n          this.districtWiseData = restItems;\n          // this.restItems = restItems;\n          // var statewise = this.restItems.statewise;\n          // this.totalCases = statewise[0];\n          // statewise.splice(0, 1);\n          // this.dataSource = new MatTableDataSource<PeriodicElement>(statewise);\n          // this.dataSelect = statewise;\n          \n        }\n      )\n  }\n  restItemsServiceGetRestItems1() {\n    return this.http\n      .get(this.restDistUrl)\n      .pipe(map(data => data));\n  }\n\n}\nexport interface PeriodicElement {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\nexport interface PeriodicElement1 {\n  active: number;\n  confirmed: number;\n  deaths: number;\n  deltaconfirmed: number;\n  deltadeaths: number;\n  deltarecovered: number;\n  lastupdatedtime: Date;\n  recovered: number;\n  state: string;\n  statecode: string;\n  statenotes: string;\n}\n\ninterface Food {\n  value: string;\n  viewValue: string;\n  model: string;\n}\n","<h1>India Covid19 Cases State Wise Report</h1>\n<div>\n    <mat-form-field>\n        <mat-label>Select the State</mat-label>\n        <mat-select  (selectionChange)=\"changeClient($event.value)\" >\n          <mat-option *ngFor=\"let element of dataSelect\" [value]=\"element.statecode\">\n            {{element.state}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n</div>\n<div *ngIf=\"totalCases\">\n  <p>Last Updated: {{ totalCases.lastupdatedtime }}</p>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Confirmed</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.confirmed }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Active</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.active }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Recovered</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.recovered }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Deceased</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.deaths }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n</div>\n<div class=\"grid\">\n  <div class=\"mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n    \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"State\">\n          <th mat-header-cell *matHeaderCellDef> District </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.district}} </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"Confirmed\">\n          <th mat-header-cell *matHeaderCellDef> Confirmed </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.confirmed}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"Active\">\n          <th mat-header-cell *matHeaderCellDef> Active </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n        </ng-container>\n    \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"Recovered\">\n          <th mat-header-cell *matHeaderCellDef> Recovered </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.recovered}} </td>\n        </ng-container>\n    \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"Deceased\">\n          <th mat-header-cell *matHeaderCellDef> Deceased </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.deceased}} </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    \n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </div>\n</div>\n\n  \n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tamilnadu',\n  templateUrl: './tamilnadu.component.html',\n  styleUrls: ['./tamilnadu.component.css']\n})\nexport class TamilnaduComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tamilnadu works!</p>\n<mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Confirmed</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Active</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Recovered</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Deceased</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-world',\n  templateUrl: './world.component.html',\n  styleUrls: ['./world.component.css']\n})\nexport class WorldComponent implements OnInit {\n\n  constructor() { }\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  ngOnInit(): void {\n  }\n\n}\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n","<div class=\"title\"><p>World Covid Updates</p></div>\n<div class=\"cards\">\n    <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Confirmed</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Active</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Recovered</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Deceased</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n</div>\n<div class=\"grid\">\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Position Column -->\n          <ng-container matColumnDef=\"position\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n          </ng-container>\n      \n          <!-- Name Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n          </ng-container>\n      \n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"weight\">\n            <th mat-header-cell *matHeaderCellDef> Weight </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n          </ng-container>\n      \n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"symbol\">\n            <th mat-header-cell *matHeaderCellDef> Symbol </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n          </ng-container>\n      \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      \n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n      </div>\n</div>\n  \n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}