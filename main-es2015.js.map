{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/india/india.component.ts","./src/app/india/india.component.html","./src/app/statewise/statewise.component.ts","./src/app/statewise/statewise.component.html","./src/app/tamilnadu/tamilnadu.component.ts","./src/app/tamilnadu/tamilnadu.component.html","./src/app/world/world.component.ts","./src/app/world/world.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Covid19';\n  restItems: any;\n  restItemsUrl = 'https://api.covid19india.org/data.json';\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getRestItems();\n  }\n\n  // Read all REST Items\n  getRestItems(): void {\n    this.restItemsServiceGetRestItems()\n      .subscribe(\n        restItems => {\n          this.restItems = restItems;\n          console.log(this.restItems);\n        }\n      )\n  }\n\n  // Rest Items Service: Read all REST Items\n  restItemsServiceGetRestItems() {\n    return this.http\n      .get(this.restItemsUrl)\n      .pipe(map(data => data));\n  }\n\n}\n","<mat-toolbar>\n  <button mat-button (click)=\"sidenav.toggle()\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">menu</mat-icon></button>\n  <span class=\"toolbartext\">COVID19 LIVE UPDATES</span>\n</mat-toolbar>\n<mat-sidenav-container>\n  <mat-sidenav  #sidenav mode=\"side\" opened> \n    <mat-nav-list class=\"navlist\">\n      <a mat-list-item routerLink=\"world\" style=\"display: none;\">World</a>\n      <a mat-list-item routerLink=\"india\">India</a>\n      <a mat-list-item routerLink=\"stateWise\">StateWise</a>\n      <a mat-list-item routerLink=\"tn\" style=\"display: none;\">Tamil Nadu</a>\n    </mat-nav-list>     \n  </mat-sidenav>\n  <mat-sidenav-content>\n    <P style=\"height: 86vh;\"><router-outlet></router-outlet></P>\n  </mat-sidenav-content>  \n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';import {MatListModule} from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';import {MatButtonModule} from '@angular/material/button';\nimport { WorldComponent } from './world/world.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IndiaComponent } from './india/india.component';\nimport { TamilnaduComponent } from './tamilnadu/tamilnadu.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StatewiseComponent } from './statewise/statewise.component';\nimport {MatSelectModule} from '@angular/material/select';\n\nconst routes: Routes = [\n  {path:'world', component:WorldComponent},\n  {path:'india', component:IndiaComponent},\n  {path:'tn', component:TamilnaduComponent},\n  {path:'stateWise', component:StatewiseComponent},\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorldComponent,\n    IndiaComponent,\n    TamilnaduComponent,\n    StatewiseComponent\n  ],\n  imports: [\n    BrowserModule,MatCardModule,MatTableModule,\n    AppRoutingModule,RouterModule.forRoot(routes),\n    BrowserAnimationsModule,MatListModule,MatPaginatorModule,\n    MatSidenavModule,MatButtonModule,MatSelectModule,\n    MatToolbarModule,MatIconModule,HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-india',\n  templateUrl: './india.component.html',\n  styleUrls: ['./india.component.css']\n})\nexport class IndiaComponent implements OnInit {\n\n  restItems: any;\n  totalCases: any;\n  dataSource: any;\n  restItemsUrl = 'https://api.covid19india.org/data.json';\n  displayedColumns: string[] = ['State', 'Confirmed', 'Active', 'Recovered','Deceased'];  \n  // @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getRestItems();\n  }\n\n  // Read all REST Items\n  getRestItems(): void {\n    this.restItemsServiceGetRestItems()\n      .subscribe(\n        restItems => {\n          this.restItems = restItems;\n          var statewise = this.restItems.statewise;\n          var test = this.restItems.statewise;\n          this.totalCases = statewise[0];\n          test.splice(0, 1);\n          debugger;\n          this.dataSource = new MatTableDataSource<PeriodicElement>(test);\n          console.log(this.restItems);\n          console.log(statewise);\n          console.log(statewise[0])\n        }\n      )\n  }\n\n  // Rest Items Service: Read all REST Items\n  restItemsServiceGetRestItems() {\n    return this.http\n      .get(this.restItemsUrl)\n      .pipe(map(data => data));\n  }\n}\nexport interface PeriodicElement {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\n","<h1>India Covid19 Cases Update</h1>\n<div *ngIf=\"totalCases\">\n  <p>Last Updated: {{ totalCases.lastupdatedtime }}</p>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Confirmed</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.confirmed }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Active</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.active }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Recovered</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.recovered }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Deceased</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.deaths }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n</div>\n<div class=\"grid\">\n  <div class=\"mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n    \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"State\">\n          <th mat-header-cell *matHeaderCellDef> State </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.state}} </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"Confirmed\">\n          <th mat-header-cell *matHeaderCellDef> Confirmed </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.confirmed}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"Active\">\n          <th mat-header-cell *matHeaderCellDef> Active </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n        </ng-container>\n    \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"Recovered\">\n          <th mat-header-cell *matHeaderCellDef> Recovered </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.recovered}} </td>\n        </ng-container>\n    \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"Deceased\">\n          <th mat-header-cell *matHeaderCellDef> Deceased </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.deaths}} </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    \n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </div>\n</div>\n\n  \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-statewise',\n  templateUrl: './statewise.component.html',\n  styleUrls: ['./statewise.component.css']\n})\nexport class StatewiseComponent implements OnInit {\n\n  restItems: any;\n  totalCases: any;\n  dataSource: any;\n  stateDetails: any;\n  dataSelect: PeriodicElement1[];\n  districtWiseData: any;\n  restItemsUrl = 'https://api.covid19india.org/data.json';\n  restDistUrl = 'https://api.covid19india.org/v2/state_district_wise.json';\n  displayedColumns: string[] = ['State', 'Confirmed', 'Active', 'Recovered','Deceased'];  \n  // @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getRestItems();\n    this.getRestItems1();\n  }\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak', model: 'abc'},\n    {value: 'pizza-1', viewValue: 'Pizza', model: 'abc'},\n    {value: 'tacos-2', viewValue: 'Tacos', model: 'abc'}\n  ];\n  // Read all REST Items\n  getRestItems(): void {\n    this.restItemsServiceGetRestItems()\n      .subscribe(\n        restItems => {\n          this.restItems = restItems;\n          var statewise = this.restItems.statewise;\n          this.totalCases = statewise[0];\n          statewise.splice(0, 1);\n          this.dataSource = new MatTableDataSource<PeriodicElement>(statewise);\n          this.dataSelect = statewise;\n          \n        }\n      )\n  }\n\n  changeClient(data){\n    var stateName = this.districtWiseData;\n    for(var pbj of this.restItems.statewise){\n      if(pbj.statecode == data){\n        debugger;\n        this.totalCases = pbj;\n      }\n    }\n    for(var obj of this.districtWiseData){\n      if(obj.statecode == data){\n        this.dataSource = new MatTableDataSource<PeriodicElement>(obj.districtData);\n      }\n    }\n    console.log(this.districtWiseData);\n    debugger;\n  }\n    // Rest Items Service: Read all REST Items\n  restItemsServiceGetRestItems() {\n    return this.http\n      .get(this.restItemsUrl)\n      .pipe(map(data => data));\n  }\n\n  getRestItems1(): void {\n    this.restItemsServiceGetRestItems1()\n      .subscribe(\n        restItems => {\n          this.districtWiseData = restItems;\n          // this.restItems = restItems;\n          // var statewise = this.restItems.statewise;\n          // this.totalCases = statewise[0];\n          // statewise.splice(0, 1);\n          // this.dataSource = new MatTableDataSource<PeriodicElement>(statewise);\n          // this.dataSelect = statewise;\n          \n        }\n      )\n  }\n  restItemsServiceGetRestItems1() {\n    return this.http\n      .get(this.restDistUrl)\n      .pipe(map(data => data));\n  }\n\n}\nexport interface PeriodicElement {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\nexport interface PeriodicElement1 {\n  active: number;\n  confirmed: number;\n  deaths: number;\n  deltaconfirmed: number;\n  deltadeaths: number;\n  deltarecovered: number;\n  lastupdatedtime: Date;\n  recovered: number;\n  state: string;\n  statecode: string;\n  statenotes: string;\n}\n\ninterface Food {\n  value: string;\n  viewValue: string;\n  model: string;\n}\n","<h1>India Covid19 Cases State Wise Report</h1>\n<div>\n    <mat-form-field>\n        <mat-label>Select the State</mat-label>\n        <mat-select  (selectionChange)=\"changeClient($event.value)\" >\n          <mat-option *ngFor=\"let element of dataSelect\" [value]=\"element.statecode\">\n            {{element.state}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n</div>\n<div *ngIf=\"totalCases\">\n  <p>Last Updated: {{ totalCases.lastupdatedtime }}</p>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Confirmed</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.confirmed }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Active</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.active }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Recovered</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.recovered }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Deceased</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        {{ totalCases.deaths }}\n      </div>\n    </mat-card-content>    \n  </mat-card>\n</div>\n<div class=\"grid\">\n  <div class=\"mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n    \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"State\">\n          <th mat-header-cell *matHeaderCellDef> District </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.district}} </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"Confirmed\">\n          <th mat-header-cell *matHeaderCellDef> Confirmed </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.confirmed}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"Active\">\n          <th mat-header-cell *matHeaderCellDef> Active </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n        </ng-container>\n    \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"Recovered\">\n          <th mat-header-cell *matHeaderCellDef> Recovered </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.recovered}} </td>\n        </ng-container>\n    \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"Deceased\">\n          <th mat-header-cell *matHeaderCellDef> Deceased </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.deceased}} </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    \n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </div>\n</div>\n\n  \n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tamilnadu',\n  templateUrl: './tamilnadu.component.html',\n  styleUrls: ['./tamilnadu.component.css']\n})\nexport class TamilnaduComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tamilnadu works!</p>\n<mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Confirmed</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Active</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Recovered</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Deceased</mat-card-title>\n    </mat-card-header>    \n    <mat-card-content>\n      <div>\n        100000\n      </div>\n    </mat-card-content>    \n  </mat-card>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-world',\n  templateUrl: './world.component.html',\n  styleUrls: ['./world.component.css']\n})\nexport class WorldComponent implements OnInit {\n\n  constructor() { }\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  ngOnInit(): void {\n  }\n\n}\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n","<div class=\"title\"><p>World Covid Updates</p></div>\n<div class=\"cards\">\n    <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Confirmed</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Active</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Recovered</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title>Deceased</mat-card-title>\n        </mat-card-header>    \n        <mat-card-content>\n          <div>\n            100000\n          </div>\n        </mat-card-content>    \n      </mat-card>\n</div>\n<div class=\"grid\">\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Position Column -->\n          <ng-container matColumnDef=\"position\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n          </ng-container>\n      \n          <!-- Name Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n          </ng-container>\n      \n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"weight\">\n            <th mat-header-cell *matHeaderCellDef> Weight </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n          </ng-container>\n      \n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"symbol\">\n            <th mat-header-cell *matHeaderCellDef> Symbol </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n          </ng-container>\n      \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      \n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n      </div>\n</div>\n  \n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}